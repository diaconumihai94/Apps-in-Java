package com.company;

import java.util.*;

public class Main{

    static ArrayList<Integer> playerPositions = new ArrayList<Integer>();
    static ArrayList<Integer> cpuPositions = new ArrayList<Integer>();

    public static void printGameBoard(char[][] gameBoard)
    {
        for(char[] row : gameBoard)
        {
            for(char c : row)
            {
                System.out.print(c);

            }
            System.out.println();
        }
    }

    public static void place(char[][] gameBoard, int pos, String user)
    {

        char symbol = ' ';
        if(user.equals("player"))
        {
            symbol = 'X';
            playerPositions.add(pos);
        }
        else if(user.equals("cpu"))
        {
            symbol = '0';
            cpuPositions.add(pos);
        }

        switch(pos)
        {
            case 1:
                gameBoard[0][0] = symbol;
                break;

            case 2:
                gameBoard[0][2] = symbol;
                break;

            case 3:
                gameBoard[0][4] = symbol;
                break;

            case 4:
                gameBoard[2][0] = symbol;
                break;

            case 5:
                gameBoard[2][2] = symbol;
                break;

            case 6:
                gameBoard[2][4] = symbol;
                break;

            case 7:
                gameBoard[4][0] = symbol;
                break;

            case 8:
                gameBoard[4][2] = symbol;
                break;

            case 9:
                gameBoard[4][4] = symbol;
                break;

            default:
                break;

        }

    }

    public static String checkWinner()
    {
        List topRow = Arrays.asList(1, 2, 3);
        List middleRow = Arrays.asList(4, 5, 6);
        List bottomRow = Arrays.asList(7, 8, 9);
        List leftCol = Arrays.asList(1, 3, 7);
        List middleCol = Arrays.asList(2, 5, 8);
        List rightCol = Arrays.asList(3, 6, 9);
        List cross1 = Arrays.asList(1, 5, 9);
        List cross2 = Arrays.asList(7, 5, 3);

        List<List> winning = new ArrayList<List>();
        winning.add(topRow);
        winning.add(middleRow);
        winning.add(bottomRow);
        winning.add(leftCol);
        winning.add(middleCol);
        winning.add(rightCol);
        winning.add(cross1);
        winning.add(cross2);

        for(List l : winning)
        {
            if (playerPositions.containsAll(l))
            {
                return "Congratulations! You've won.";
            }
            else if (cpuPositions.containsAll(l))
            {
                return "CPU wins!";
            }
            else if(playerPositions.size() + cpuPositions.size() == 9)
            {
                return "TIE!";
            }
        }


        return "";
    }

    public static void main(String[] args)
    {
        char[][] gameBoard = {{' ', '|', ' ', '|', ' '},
                {'-', '+', ' ', '+', '-'},
                {' ', '|', ' ', '|', ' '},
                {'-', '+', ' ', '+', '-'},
                {' ', '|', ' ', '|', ' '}};

        printGameBoard(gameBoard);

       while(true)
       {
           Scanner scan = new Scanner(System.in);
           System.out.println("Enter a placement (1 - 9) : ");
           int playerPos = scan.nextInt();
           while(playerPositions.contains(playerPos) || cpuPositions.contains(cpuPositions))
           {
               System.out.println("Position taken! Enter a correct position!");
               playerPos = scan.nextInt();
           }

           place(gameBoard, playerPos, "player");

           String result = checkWinner();
           if(result.length() > 0) {
               System.out.println(result);
           break;
       }

           Random rand = new Random();
           int cpuPos = rand.nextInt(9) + 1;
           place(gameBoard, cpuPos, "cpu");
           while(playerPositions.contains(cpuPos) || cpuPositions.contains(cpuPos))
           {
               cpuPos = rand.nextInt(9) + 1;
           }

           printGameBoard(gameBoard);

           if(result.length() > 0) {

               System.out.println(result);
               break;

           }
       }
    }
}
